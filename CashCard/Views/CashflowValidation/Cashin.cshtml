@using CashCard.Models
@model global::CashCard.Models.CashIn

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_LayoutBootstrap.cshtml";
}

<!-- modal add info-->
<div class="modal fade" id="ModalAddInfo" tabindex="-1" role="dialog" aria-labelledby="Add Note">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Add Log Note</h4>
            </div>
            <div class="modal-body">
                <form id="formNote">
                    <div class="form-group ">
                        <label>Note</label>
                        <div>
                            <input id="NoteLog" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group ">
                        <button type="button" id="btnConfirm" class="btn btn-primary">Confirm</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="ModalError" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Error!</h4>
            </div>
            <div class="modal-body">
                <span id="errorInfo">Error</span>
            </div>
        </div>
    </div>
</div>


<div>
   
   
    <div class="row">
        <div class="col-md-6">
            <h4>CashIn</h4>
            <dl class="dl-horizontal">
                @Html.HiddenFor(p => p.Id)

                <dt>
                    @Html.DisplayNameFor(model => model.User.UserName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.User.UserName)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Date)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Date)
                </dd>

                <dt>
                    @Html.DisplayNameFor(model => model.Note)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Note)
                </dd>
                <dt>
                    State
                </dt>
                <dd>
                    @switch (Model.State)
                    {
                        case StateCashCard.Draft:
                            <span class="label label-default">Draft</span>
                            break;
                        case StateCashCard.Final:
                            <span class="label label-primary">Final</span>
                            break;
                        case StateCashCard.Revision:
                            <span class="label label-warning">Revision</span>
                            break;
                        case StateCashCard.Approve:
                            <span class="label label-success">Approve</span>
                            break;
                        case StateCashCard.Reject:
                            <span class="label label-danger">Reject</span>
                            break;
                    }
                </dd>

              

              
                <dt>
                    @Html.DisplayNameFor(model => model.Total)
                </dt>

                <dd>
                    <span id="spanTotal">@Html.DisplayFor(model => model.Total)</span>

                </dd>

                <dd>
                   
                    @if (Model.State == StateCashCard.Final)
                    {

                        <input type="button" id="btnRevision" state="Revision" value="Revision" class="btn-ajax btn btn-warning " data-toggle="modal" data-target="#ModalAddInfo" />
                        <input type="button" id="btnReject" state="Reject" value="Reject" class="btn-ajax btn btn-danger " data-toggle="modal" data-target="#ModalAddInfo" />
                        <input type="button" id="btnApprove" state="Approve" value="Approve" class="btn-ajax btn btn-success" data-toggle="modal" data-target="#ModalAddInfo" />
                    }

                </dd>

            </dl>
        </div>
        
        <div class="col-md-6">

            <div class="panel panel-primary">
                <div class="panel-heading">Log</div>
                <div class="panel-body">
                    @Html.DisplayTextFor(model => model.LogNote)
                </div>
            </div>


        </div>
    </div>
</div>

<div class="row" id="rowTable">
    <div class="col-lg-12">
        <table id="tbl" class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Note</th>
                    <th>Amount</th>

                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    foreach (var a in Model.CashInDetails)
                    {
                        <tr>
                            <td>
                                @Html.DisplayTextFor(i => a.Id)
                            </td>

                            <td>
                                @Html.DisplayTextFor(i => a.Note)
                            </td>
                            <td>
                                @Html.DisplayFor(i => a.Amount)
                            </td>


                        </tr>
                    }
                }


            </tbody>
        </table>
    </div>
</div>
<p>
 
    @Html.ActionLink("Back to List", "Index")
</p>



@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/jquerynumber")

    <script type="text/javascript">
        var state, id, log;
        var tbl = $("#tbl").DataTable(
        {
            "searching": false,
            "lengthChange": false,
            "paging": false,
            "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                    "ordering": false
                }
            ]

        });
        $("#spanTotal").number(true, 0);
      
        function showErrorInfo(error) {

            $("#errorInfo").text(error);
            $('#ModalError').modal('show');

        }

        $(".btn-ajax").click(function () {
             state = $(this).attr("state");
            id = $("#Id").val();
            $("#myModalLabel").text("Add Log for " + state);
           
        });
        $("#btnConfirm").click(function () {
            $("#ModalAddInfo").modal('hide');

            log = $("#NoteLog").val();

            $.ajax({
                url: '@Url.Action("SetState")',
                data: JSON.stringify({ Id: id, State: state, Log: log }),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function(result) {

                    if (result.Success == "1") {
                        window.location.href = '@Url.Action("index")';
                    } else {
                        showErrorInfo(result.ex);
                    }
                }

            });
        });
    </script>

}

   