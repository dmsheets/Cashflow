@using CashCard.Models
@using Microsoft.Ajax.Utilities
@model IEnumerable<CashCard>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutBootstrap.cshtml";
}
<!--Modal-->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="Add Note">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Specify Cash Out</h4>
            </div>
            <div class="modal-body">
                <form id="formNote" action='@Url.Action("CreateCashOut")' method="GET">
                    <div class="form-group ">
                        <label>Type</label>
                        <div>
                            @Html.DropDownList("TypeOut", (SelectList)ViewBag.TypeOuts, new { @class = "form-control" })
                           
                        </div>
                    </div>
                    <div class="form-group ">
                        <label>User</label>
                        <div>
                            @Html.DropDownList("UserType", (SelectList)ViewBag.UserTypes, new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group ">
                        <button type="submit" id="btnConfirm" class="btn btn-primary">Confirm</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

<h2>Index</h2>

<p>
   
    @Html.ActionLink("New Cash In", "CashIn") |
    <a href="#" data-toggle="modal" data-target="#myModal">New Cash Out</a>
   
</p>


<table class="table table table-striped table-bordered table-hover">
    <thead>
        <tr>

            <th>
                Owner
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Note)
            </th>
            <th>
                Cost Center
            </th>
            <th>
                Total
            </th>
            <th>
               Status
            </th>
            <th>
                Type
            </th>
            <th> Action </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var xclas = item is CashIn ? "success" : "warning";
            <tr class='@xclas'>

                <td>
                    @Html.DisplayFor(modelItem => item.User.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Date)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Note)
                </td>
                <td>
                    @if (item is CashOut)
                    {
                        var xx = item as CashOut;
                        <span>@xx.CostCenter</span>

                    }

                    else
                    {
                        <span>-</span>


                    }
                </td>
                <td class="text-right">
                    @Html.DisplayFor(modelItem => item.Total)
                </td>
                <td>

                    @switch (item.State)
                    {
                        case StateCashCard.Draft:
                            <span class="label label-default">Draft</span>
                            break;
                        case StateCashCard.Final:
                        <span class="label label-primary">Final</span>
                            break;
                        case StateCashCard.Revision:
                        <span class="label label-warning">Revision</span>
                            break;
                        case StateCashCard.Approve:
                        <span class="label label-success">Approve</span>
                            break;
                        case StateCashCard.Reject:
                        <span class="label label-danger">Reject</span>
                            break;
                    }


                </td>
                <td>
                    @if (item is CashOut)
                    {
                        var oo = item as CashOut;
                        <span> @oo.TypeOut</span>

                    }
                    else if (item is CashIn)
                    {
                        <span>Cash In</span>

                    }
                    else
                    {
                        <span>Irregular</span>


                    }


                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id })

                </td>
            </tr>
        }
    </tbody>

</table>

@section Scripts {
    @Scripts.Render("~/bundles/datatable")
    <script type="text/javascript">

        var tbl = $(".table").DataTable(
        {
            "searching": true,
            "lengthChange": false
           
        });



    </script>
}


