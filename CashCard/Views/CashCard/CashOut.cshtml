@using CashCard.Models
@model CashOut
@{
    ViewBag.Title = Model.Id == 0 ? "Create" : "Update";
    Layout = "~/Views/Shared/_LayoutBootstrap.cshtml";
}


<!-- modal add info-->
<div class="modal fade" id="ModalAddInfo" tabindex="-1" role="dialog" aria-labelledby="Add Note">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Add Log Note</h4>
            </div>
            <div class="modal-body">
                <form id="formNote">
                    <div class="form-group ">
                        <label>Note</label>
                        <div>
                            <input id="NoteLog" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group ">
                        <button type="button" id="btnConfirm" class="btn btn-primary">Confirm</button>
                    </div>
                </form>
            </div>

        </div>
    </div>
</div>

<div class="modal fade bs-example-modal-sm" id="ModalError" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel">
    <div class="modal-dialog modal-sm">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Error!</h4>
            </div>
            <div class="modal-body">
                <span id="errorInfo">Error</span>
            </div>
        </div>
    </div>
</div>


<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Detail</h4>
            </div>
            <div class="modal-body">

                <form id="detail">

                    <input id="regularDetailId" type="hidden" />


                    <div class="form-group">
                        <label>Name</label>
                        <div>
                            @Html.DropDownList("Quiz", (SelectList)ViewBag.Quiz, new { @class = "form-control", data_live_search = "true", required = true })
                        </div>

                    </div>

                

                    <div class="form-group">
                        <label id="Label1">Note1</label>
                        <div>
                            <input id="Note1" name="Note1" class="form-control" data-provide="typeahead" />
                        </div>
                    </div>



                    <div class="form-group ">
                        <label id="Label2">Note2</label>
                        <div>
                            <input id="Note2" name="Note2" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group ">
                        <label id="Label3">Note3</label>
                        <div>
                            <input id="Note3" name="Note3" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group ">
                        <label>Date Info</label>
                        <div>
                            <input id="DateInfo" class="form-control" />
                        </div>
                    </div>

                    <div class="form-group ">
                        <label>Amount</label>
                        <div>
                            <input id="Amount" name="Amount" type="text" class="form-control" required number="true" />
                        </div>
                    </div>


                    <div class="form-group ">
                        <label>Qty</label>
                        <div>
                            <input id="Qty" name="Qty" type="text" class="form-control" required number="true" value="1" />
                        </div>
                    </div>

                    <div class="form-group ">
                        <button type="button" id="addToTbl" class="btn btn-primary">Add</button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>


        </div>
    </div>
</div>


<!-- The Gallery as lightbox dialog, should be a child element of the document body -->
<div id="blueimp-gallery" class="blueimp-gallery">
    <div class="slides"></div>
    <h3 class="title"></h3>
    <a class="prev">‹</a>
    <a class="next">›</a>
    <a class="close">×</a>
    @*<a class="play-pause"></a>*@

    <ol class="indicator"></ol>
</div>

<div class="row">
    <div class="col-md-6">
        @using (Html.BeginForm())
        {

            @Html.AntiForgeryToken()
            <div class="form-horizontal">
                <fieldset>
                    <legend> Cash Out</legend>
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(p => p.Id)



                    <div class="form-group">
                        @Html.LabelFor(model => model.Date, new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="text" id="Date" name="Date" class="form-control" value='@Model.Date.ToString("yyyy/MM/dd")' required />

                            @Html.ValidationMessageFor(model => model.Date)

                        </div>


                    </div>

                    <div class="form-group">

                        <label class="col-md-2 control-label"></label>
                        <div class="col-md-10">

                            <button type="button" class="btn btn-warning " data-toggle="modal" data-target="#myModal">
                                Add Detail
                            </button>

                            <span class="btn btn-success fileinput-button">
                                <i class="glyphicon glyphicon-plus"></i>
                                <span>Add files...</span>
                                <input id="fileupload" type="file" name="files[]" multiple accept="image/*">
                            </span>
                            <span id="progressPersen"></span>
                        </div>

                    </div>
                    <div class="form-group">

                        @Html.Label("Image", new { @class = "control-label col-md-2" })
                        <div id="links" class="col-md-10">
                            @if (Model != null)
                            {
                                foreach (var bx in Model.ImageDatas)
                                {


                                    <div class="linksDiv" filename='@bx.FileName' iddetailimage='@bx.Id'>
                                        <a href='@Url.Content("~/images/"+ bx.FileName)' title='@bx.FileName' data-gallery="">
                                            <img src='@Url.Content("~/images/thumbnails/" + bx.FileName)'>
                                        </a>

                                        <button type="button" class="linksButton button btn-danger"><i class="fa fa-trash"></i></button>
                                    </div>
                                }

                            }

                        </div>
                    </div>

                    <div class="form-group">

                        <label class="col-md-2 control-label"></label>
                        <div class="col-md-10">

                            <input type="submit" value="Save As Draft" id="saveDraft" class="btn btn-default " />

                            <input type="submit" value="Save As Final" id="saveFinal" class="btn btn-primary " />

                        </div>

                    </div>



                </fieldset>



            </div>


        }

    </div>
    <div class="col-md-6">

        <div class="panel panel-primary">
            <div class="panel-heading">Info</div>
            <div class="panel-body">
                <dl class="dl-horizontal infobox">

                    <dt>
                        Status
                    </dt>

                    <dd>
                        @switch (Model.State)
                        {

                            case StateCashCard.Draft:
                                <span class="label label-default">Draft</span>
                                break;
                            case StateCashCard.Final:
                            <span class="label label-primary">Final</span>
                                break;
                            case StateCashCard.Revision:
                            <span class="label label-warning">Revision</span>
                                break;
                            case StateCashCard.Approve:
                            <span class="label label-success">Approve</span>
                                break;
                            case StateCashCard.Reject:
                            <span class="label label-danger">Reject</span>
                                break;
                        }
                    </dd>
                    <dt>
                        Type
                    </dt>
                    <dd>
                        <span id="TypeOut">@Html.DisplayFor(p => p.TypeOut)</span>
                    </dd>
                    <dt>Cost Center</dt>
                    <dd>
                        <span id="CostCenter">@Html.DisplayFor(p => p.CostCenter)</span>
                    </dd>

                    <dt>Log</dt>
                    <dd>
                        <div class="logdiv">
                            @Html.DisplayTextFor(p => p.LogNote)
                        </div>

                    </dd>

                </dl>


            </div>
        </div>
        <div class="well well-sm warning"><b>Total : </b><span id="Total">@Html.DisplayFor(p => p.Total)</span></div>

    </div>
</div>



<hr />



<div class="row" id="rowTable">
    <div class="table-responsive col-md-12">

        <table id="tbl" class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>IdQuiz</th>
                    <th>Name</th>
                    <th>Note 1</th>
                    <th>Note 2</th>
                    <th>Note 3</th>
                    <th>Date Info</th>
                    <th>Amount</th>
                    <th>Qty</th>
                    <th>Subtotal</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    foreach (var a in Model.RegularDetails)
                    {

                        <tr>
                            <td>
                                @Html.DisplayTextFor(i => a.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(i => a.Quiz.Id)
                            </td>
                            <td>
                                @Html.DisplayFor(i => a.Quiz.Info)
                            </td>
                            <td>
                                @Html.DisplayFor(i => a.Note1)
                            </td>
                            <td>
                                @Html.DisplayFor(i => a.Note2)
                            </td>
                            <td>
                                @Html.DisplayFor(i => a.Note3)
                            </td>
                            <td>
                                @Html.DisplayFor(i => a.DateInfo)
                            </td>
                            <td>
                                @Html.DisplayFor(i => a.Amount)
                            </td>
                            <td>
                                @Html.DisplayFor(i => a.Qty)
                            </td>
                            <td>
                                @Html.DisplayFor(i => a.SubTotal)
                            </td>
                            <td>
                                <a href="#">Edit</a>
                                <a href="#">Delete</a>
                            </td>
                        </tr>
                    }
                }


            </tbody>
        </table>

    </div>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>




@section Scripts {

    @Scripts.Render("~/bundles/blueimp")

    @Scripts.Render("~/bundles/datatable")
    @Scripts.Render("~/bundles/jquerynumber")
    @Scripts.Render("~/bundles/numeral")
    @Scripts.Render("~/bundles/fileupload")
    <script src="~/Scripts/bootstrap3-typeahead.min.js"></script>




    <script type="text/javascript">
        var log;
        var trActive;

        var data = @Html.Raw(Json.Encode(ViewBag.QuizInfo));
        var dtKendaraan = @Html.Raw(Json.Encode(ViewBag.Kendaraan));

        var detailForm = $("#detail").validate();


        $("#Date").datepicker({
            dateFormat: "yy/mm/dd",
            onClose:
                function(dateText, inst) {
                    $(this).datepicker('option', 'dateFormat', 'yy/mm/dd');
                }
        });

        $("#Quiz").selectpicker();
        $("#Kendaraan").selectpicker();

        $("#DateInfo").datepicker({
            dateFormat: "yy/mm/dd",
            onClose:
                function(dateText, inst) {
                    $(this).datepicker('option', 'dateFormat', 'yy/mm/dd');
                }
        });

        $("#Qty").number(true, 0);
        $("#Amount").number(true, 0);
        $("#Total").number(true, 0);


        evenchangeCombo();

        $("#btnConfirm").click(function() {
            log = $("#NoteLog").val();

            $("#ModalAddInfo").modal('hide');

            var cashFlow = getCashFlow();


            $.ajax({
                url: '@Url.Action("CreateCashoutRegularFinal")',
                data: JSON.stringify({ cashOut: cashFlow, log: log }),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function(result) {

                    if (result.Success == "1") {
                        window.location.href = '@Url.Action("Index")';
                    } else {
                        showErrorInfo(result.ex);
                    }
                }

            });

        });


        var tbl = $("#tbl").DataTable(
        {
            "searching": false,
            "lengthChange": false,
            //"scrollY": "200px",
            //"scrollCollapse": true,
            "paging": false,
            "ordering": false,
            "columnDefs": [
                {
                    "targets": [0],
                    "visible": false,
                    "ordering": false
                },
                {
                    "targets": [1],
                    "visible": false
                },
                {
                    "targets": [8], //Qty
                    "visible": false
                }, {
                    "targets": [9], //Subtotal
                    "visible": false
                },
                {
                    "targets": [10],
                    "render": function(data, type, full, meta) {
                        return " <a href='#' class='editDetail'>Edit</a> | <a href='#' class='deleteDetail'>Delete</a>";
                    }
                }
            ]

        });


        function showErrorInfo(error) {

            $("#errorInfo").text(error);
            $('#ModalError').modal('show');

        }


        $("#addToTbl").click(function(e) {
            e.preventDefault();

            if ($('#detail').valid()) {

                var total = numeral().unformat($("#Total").text());


                var subTotal = numeral().unformat($("#Amount").val()) * numeral().unformat($("#Qty").val());
                total = total + subTotal;

                if (trActive) {
                    var trData = tbl.row(trActive).data();
                    total = total - numeral().unformat(trData[7]);

                    var d = tbl.row(trActive);
                    d.data([
                        $("#regularDetailId").val(), $("#Quiz").val(), $("#Quiz option:selected").text(), $("#Note1").val(),
                        $("#Note2").val(), $("#Note3").val(), $("#DateInfo").val(), numeral($("#Amount").val()).format('0,0'), numeral($("#Qty").val()).format('0,0'), numeral(subTotal).format('0,0')
                    ]).draw();
                    //tbl.row(trActive).remove().draw();
                } else {
                    tbl.row.add([
                        $("#regularDetailId").val(), $("#Quiz").val(), $("#Quiz option:selected").text(), $("#Note1").val(),
                        $("#Note2").val(), $("#Note3").val(), $("#DateInfo").val(), numeral($("#Amount").val()).format('0,0'), numeral($("#Qty").val()).format('0,0'), numeral(subTotal).format('0,0')
                    ]).draw();
                }

                $("#Total").text(numeral(total).format('0,0'));


                $('[data-id="Quiz"]')[0].focus();
                $("#Note1").val('');
                $("#Note2").val('');
                $("#Note3").val('');
                $("#DateInfo").val('');
                $("#Amount").val('');
                $("#Qty").val('1');
                $("#regularDetailId").val("0");

                if (trActive) //edit mode
                {
                    $("#myModal").modal('hide');
                }
            }

        });


        $('#rowTable').on('click', '.editDetail', function() {
            var tr = $(this).closest('tr');
            var rowData = tbl.row(tr).data();
            $("#Note1").val(rowData[3]);
            $("#Note2").val(rowData[4]);
            $("#Note3").val(rowData[5]);
            $("#DateInfo").val(rowData[6]);
            $("#Amount").val(rowData[7]);
            $("#Qty").val(rowData[8]);
            $("#regularDetailId").val(rowData[0]);
            $("#Quiz").selectpicker('val', rowData[1]);
            evenchangeCombo();


            $('#myModal').modal('show');
            $("#addToTbl").html("Save");
            trActive = tr;
        });

        $('#rowTable').on('click', '.deleteDetail', function() {
            var tr = $(this).closest('tr');
            var rowData = tbl.row(tr).data();

            tbl.row(tr).remove().draw();


            var total = numeral().unformat($("#Total").val());
            total = total - numeral().unformat(rowData[9]);
            $("#Total").text(numeral(total).format('0,0'));
        });





        function evenchangeCombo() {
            var selected = $('#Quiz').find("option:selected").val();
            var text = $('#Quiz').find("option:selected").text();

            if (text.toLowerCase().indexOf('bensin') >= 0) {
                $("#Note1").typeahead({ source: dtKendaraan });
            } else {
                $('#Note1').typeahead('destroy');
            }

            var element = $.grep(data, function(e) { return e.Id == selected; });

            //$("#info").html(element[0].Info);
            if (!element[0])
                return;

            $("#Label1").text(element[0].label1);
            $("#Label2").text(element[0].label2);
            $("#Label3").text(element[0].label3);

            if (element[0].requiredAll) {

                $("#Note1").rules('add', 'required');
                $("#Note2").rules('add', 'required');
                $("#Note3").rules('add', 'required');

            } else {
                $("#Note1").rules('remove', 'required');
                $("#Note2").rules('remove', 'required');
                $("#Note3").rules('remove', 'required');
            }
            detailForm.resetForm();
        }

        $("#Quiz").change(function() {
            evenchangeCombo();
        });



        function getCashFlow() {
            var cashFlow = { "Id": 0, "Date": "", "Note": "", "CostCenter": "", "TypeOut": "", "RegularDetails": [], "ImageDatas": [] };

            cashFlow.Id = $("#Id").val();
            cashFlow.Date = $("#Date").val();
            cashFlow.Note = $("#Note").val();
            cashFlow.CostCenter = $("#CostCenter").text();
            cashFlow.TypeOut = $("#TypeOut").text();
            var datas = tbl.rows().data();
            for (var i = 0; i < datas.length; i++) {
                var dt = datas[i];
                var regularDetail = { "Id": 0, "QuizId": 0, "Note1": "", "Note2": "", "Note3": "", "Amount": 0, "Qty": 1, "DateInfo": '' };
                regularDetail.Id = dt[0];
                regularDetail.QuizId = dt[1];
                regularDetail.Note1 = dt[3];
                regularDetail.Note2 = dt[4];
                regularDetail.Note3 = dt[5];
                regularDetail.DateInfo = dt[6];
                regularDetail.Amount = numeral().unformat(dt[7]);
                regularDetail.Qty = numeral().unformat(dt[8]);
                cashFlow.RegularDetails.push(regularDetail);
            }

            $(".linksDiv").each(function(index, element) {
                var imageDetail = { "Id": 0, "Info": '', "FileName": '' };
                imageDetail.Id = $(this).attr('idDetailImage');
                imageDetail.FileName = $(this).attr('fileName');
                cashFlow.ImageDatas.push(imageDetail);
            });

            return cashFlow;
        }


        $("#saveDraft").click(function(e) {
            e.preventDefault();
            var form = $(this).parents('form:first');
            if (form.valid()) {
                var cashFlow = getCashFlow();
                $.ajax({
                    url: '@Url.Action("CreateCashoutRegularDraft")',
                    data: JSON.stringify(cashFlow),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function(result) {

                        if (result.Success == "1") {
                            window.location.href = '@Url.Action("index")';
                        } else {
                            showErrorInfo(result.ex);
                        }
                    }

                });
            }
        });

        $("#saveFinal").click(function(e) {
            e.preventDefault();

            var form = $(this).parents('form:first');
            if (form.valid()) {
                //Ajax call here

                $("#ModalAddInfo").modal('show');
            }
        });


        $("#myModal").on('hide.bs.modal', function(e) {
            trActive = null;
            $("#Note1").val('');
            $("#Note2").val('');
            $("#Note3").val('');
            $("#Amount").val('');
            $("#Qty").val('1');
            $("#DateInfo").val('');
            $("#regularDetailId").val("0");
            detailForm.resetForm();
        });

        $("#myModal").on('show.bs.modal', function(e) {
            $("#addToTbl").html("Add");
        });

        /* File Upload Need */

        $('#fileupload').fileupload({
            dataType: 'json',
            url: '@Url.Action("UploadFiles", "FileUpload")', //'/Home/UploadFiles',
            autoUpload: true,
            done: function(e, data) {

                $("#progressPersen").text('');

                AddDetailImage(data.result.name);


            },
            fail: function(e, data) {
                $("#progressPersen").text('');
                alert(data.reponseText);
            }
        }).on('fileuploadprogressall', function(e, data) {
            var progress = parseInt(data.loaded / data.total * 100, 10);
            $("#progressPersen").text(progress + '%');


        });

        $('#links').on('click', '.linksButton', function() {

            var parent = $(this).closest("div");
            $.ajax({
                url: '@Url.Action("DeleteFile", "FileUpload")',
                data: JSON.stringify({ fileName: parent.attr('fileName') }),
                type: 'POST',
                contentType: 'application/json;',
                dataType: 'json',
                success: function(result) {

                    if (result.Error) {
                        showErrorInfo(result.Error);
                        return;
                    }
                    parent.remove();
                }

            });
        });

        function AddDetailImage(fileName) {
            var linksContainer = $("#links");
            var div = $('<div/>').attr('fileName', fileName).attr('class', 'linksDiv').attr('idDetailImage', '0');

            var a = $('<a/>').append($('<img>').attr('src', '@Url.Content("~/images/thumbnails/")' + fileName))
                .attr('href', '@Url.Content("~/images/")' + fileName)
                .attr('title', fileName)
                .attr('data-gallery', '');
            var button = $('<button/>').append($('<i/>').attr('class', 'fa fa-trash')).attr('class', 'linksButton button btn-danger').attr('type', 'button');


            div.append(a).append(button);
            div.appendTo(linksContainer);


        }

        //hide Dateinfo for regular

        if ('@Model.TypeOut' == 'Regular') {
            $("#DateInfo").closest("div .form-group").hide();
            tbl.column(6).visible(false);

        }
        //hide Qty n subtotal
        $("#Qty").closest("div .form-group").hide();


    </script>


}
